events{
}

http {
    include mime.types;

    upstream views {
        server localhost:3000;
    }

    server {
        server_name api.rxonvrdo.dev;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        listen [::]:443 ssl;
        listen 443 ssl;

        location / {
            # Captura o primeiro elemento do caminho após a barra inicial e o restante do caminho
            if ($request_uri ~ ^/([^/]+)(/.*|)$) {
                set $upstream_name $1;
                set $proxy_path $2;
            }

            # Define a URL do upstream com base no primeiro elemento do caminho
            set $upstream_url http://$upstream_name;

            # Faz o proxy pass para o upstream com base na URL definida
            proxy_pass $upstream_url$proxy_path;

            # Configura os cabeçalhos de proxy
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    server {
        server_name rxonvrdo.dev *.rxonvrdo.dev;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        listen [::]:443 ssl;
        listen 443 ssl;

        root /var/www/html;
        index index.html;

        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;

        if ($http_host ~* "^(.*?)\.rxonvrdo\.dev$") {
            set $subdomain $1;
            rewrite ^(.*)$ /Oqkwnm3kl5Mn/$subdomain/$1 last;
        }


        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}